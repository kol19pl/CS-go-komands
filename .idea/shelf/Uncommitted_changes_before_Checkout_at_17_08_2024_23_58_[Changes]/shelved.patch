Index: app/src/main/java/com/koltech/komendydocsgo/Loncze.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.koltech.komendydocsgo;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.Display;\r\nimport android.widget.FrameLayout;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.ads.AdRequest;\r\nimport com.google.android.gms.ads.AdSize;\r\nimport com.google.android.gms.ads.AdView;\r\nimport com.google.android.gms.ads.MobileAds;\r\nimport com.google.android.gms.ads.initialization.InitializationStatus;\r\nimport com.google.android.gms.ads.initialization.OnInitializationCompleteListener;\r\n\r\npublic class Loncze extends AppCompatActivity {\r\n\r\n    private AdView adView;\r\n    private FrameLayout adContainerView;\r\n    private static final String AD_UNIT_ID = \"ca-app-pub-4834003578511022/4679805754\";\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.loncze);\r\n\r\n        MobileAds.initialize(this, new OnInitializationCompleteListener() {\r\n            @Override\r\n            public void onInitializationComplete(InitializationStatus initializationStatus) {\r\n            }\r\n        });\r\n\r\n        adContainerView = findViewById(R.id.ad_view_container_loncze);\r\n\r\n        // Since we're loading the banner based on the adContainerView size, we need to wait until this\r\n        // view is laid out before we can get the width.\r\n        adContainerView.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                loadBanner();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /** Called when leaving the activity */\r\n    @Override\r\n    public void onPause() {\r\n        if (adView != null) {\r\n            adView.pause();\r\n        }\r\n        super.onPause();\r\n    }\r\n\r\n    /** Called when returning to the activity */\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if (adView != null) {\r\n            adView.resume();\r\n        }\r\n    }\r\n\r\n    /** Called before the activity is destroyed */\r\n    @Override\r\n    public void onDestroy() {\r\n        if (adView != null) {\r\n            adView.destroy();\r\n        }\r\n        super.onDestroy();\r\n    }\r\n\r\n    private void loadBanner() {\r\n        // Create an ad request.\r\n        adView = new AdView(this);\r\n        adView.setAdUnitId(AD_UNIT_ID);\r\n        adContainerView.removeAllViews();\r\n        adContainerView.addView(adView);\r\n\r\n        AdSize adSize = getAdSize();\r\n        adView.setAdSize(adSize);\r\n\r\n        AdRequest adRequest = new AdRequest.Builder().build();\r\n\r\n        // Start loading the ad in the background.\r\n        adView.loadAd(adRequest);\r\n    }\r\n\r\n    private AdSize getAdSize() {\r\n        // Determine the screen width (less decorations) to use for the ad width.\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n        DisplayMetrics outMetrics = new DisplayMetrics();\r\n        display.getMetrics(outMetrics);\r\n\r\n        float density = outMetrics.density;\r\n\r\n        float adWidthPixels = adContainerView.getWidth();\r\n\r\n        // If the ad hasn't been laid out, default to the full screen width.\r\n        if (adWidthPixels == 0) {\r\n            adWidthPixels = outMetrics.widthPixels;\r\n        }\r\n\r\n        int adWidth = (int) (adWidthPixels / density);\r\n\r\n        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/koltech/komendydocsgo/Loncze.java b/app/src/main/java/com/koltech/komendydocsgo/Loncze.java
--- a/app/src/main/java/com/koltech/komendydocsgo/Loncze.java	
+++ b/app/src/main/java/com/koltech/komendydocsgo/Loncze.java	
@@ -89,22 +89,17 @@
     }
 
     private AdSize getAdSize() {
-        // Determine the screen width (less decorations) to use for the ad width.
+        // Step 2 - Determine the screen width (less decorations) to use for the ad width.
         Display display = getWindowManager().getDefaultDisplay();
         DisplayMetrics outMetrics = new DisplayMetrics();
         display.getMetrics(outMetrics);
 
+        float widthPixels = outMetrics.widthPixels;
         float density = outMetrics.density;
 
-        float adWidthPixels = adContainerView.getWidth();
-
-        // If the ad hasn't been laid out, default to the full screen width.
-        if (adWidthPixels == 0) {
-            adWidthPixels = outMetrics.widthPixels;
-        }
+        int adWidth = (int) (widthPixels / density);
 
-        int adWidth = (int) (adWidthPixels / density);
-
-        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);
+        // Step 3 - Get adaptive ad size and return for setting on the ad view.
+        return AdSize.getCurrentOrientationAnchoredAdaptiveBannerAdSize(this, adWidth);
     }
 }
Index: app/src/main/java/com/koltech/komendydocsgo/Myszka.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.koltech.komendydocsgo;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.Display;\r\nimport android.widget.FrameLayout;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.ads.AdRequest;\r\nimport com.google.android.gms.ads.AdSize;\r\nimport com.google.android.gms.ads.AdView;\r\nimport com.google.android.gms.ads.MobileAds;\r\nimport com.google.android.gms.ads.initialization.InitializationStatus;\r\nimport com.google.android.gms.ads.initialization.OnInitializationCompleteListener;\r\n\r\npublic class Myszka extends AppCompatActivity {\r\n\r\n    private AdView adView;\r\n    private FrameLayout adContainerView;\r\n    private static final String AD_UNIT_ID = \"ca-app-pub-4834003578511022/4679805754\";\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.myszka);\r\n\r\n        MobileAds.initialize(this, new OnInitializationCompleteListener() {\r\n            @Override\r\n            public void onInitializationComplete(InitializationStatus initializationStatus) {\r\n            }\r\n        });\r\n\r\n        adContainerView = findViewById(R.id.ad_view_container_myszka);\r\n\r\n        // Since we're loading the banner based on the adContainerView size, we need to wait until this\r\n        // view is laid out before we can get the width.\r\n        adContainerView.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                loadBanner();\r\n            }\r\n        });\r\n    }\r\n\r\n    /** Called when leaving the activity */\r\n    @Override\r\n    public void onPause() {\r\n        if (adView != null) {\r\n            adView.pause();\r\n        }\r\n        super.onPause();\r\n    }\r\n\r\n    /** Called when returning to the activity */\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if (adView != null) {\r\n            adView.resume();\r\n        }\r\n    }\r\n\r\n    /** Called before the activity is destroyed */\r\n    @Override\r\n    public void onDestroy() {\r\n        if (adView != null) {\r\n            adView.destroy();\r\n        }\r\n        super.onDestroy();\r\n    }\r\n\r\n    private void loadBanner() {\r\n        // Create an ad request.\r\n        adView = new AdView(this);\r\n        adView.setAdUnitId(AD_UNIT_ID);\r\n        adContainerView.removeAllViews();\r\n        adContainerView.addView(adView);\r\n\r\n        AdSize adSize = getAdSize();\r\n        adView.setAdSize(adSize);\r\n\r\n        AdRequest adRequest = new AdRequest.Builder().build();\r\n\r\n        // Start loading the ad in the background.\r\n        adView.loadAd(adRequest);\r\n    }\r\n\r\n    private AdSize getAdSize() {\r\n        // Determine the screen width (less decorations) to use for the ad width.\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n        DisplayMetrics outMetrics = new DisplayMetrics();\r\n        display.getMetrics(outMetrics);\r\n\r\n        float density = outMetrics.density;\r\n\r\n        float adWidthPixels = adContainerView.getWidth();\r\n\r\n        // If the ad hasn't been laid out, default to the full screen width.\r\n        if (adWidthPixels == 0) {\r\n            adWidthPixels = outMetrics.widthPixels;\r\n        }\r\n\r\n        int adWidth = (int) (adWidthPixels / density);\r\n\r\n        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/koltech/komendydocsgo/Myszka.java b/app/src/main/java/com/koltech/komendydocsgo/Myszka.java
--- a/app/src/main/java/com/koltech/komendydocsgo/Myszka.java	
+++ b/app/src/main/java/com/koltech/komendydocsgo/Myszka.java	
@@ -88,22 +88,17 @@
     }
 
     private AdSize getAdSize() {
-        // Determine the screen width (less decorations) to use for the ad width.
+        // Step 2 - Determine the screen width (less decorations) to use for the ad width.
         Display display = getWindowManager().getDefaultDisplay();
         DisplayMetrics outMetrics = new DisplayMetrics();
         display.getMetrics(outMetrics);
 
+        float widthPixels = outMetrics.widthPixels;
         float density = outMetrics.density;
 
-        float adWidthPixels = adContainerView.getWidth();
-
-        // If the ad hasn't been laid out, default to the full screen width.
-        if (adWidthPixels == 0) {
-            adWidthPixels = outMetrics.widthPixels;
-        }
+        int adWidth = (int) (widthPixels / density);
 
-        int adWidth = (int) (adWidthPixels / density);
-
-        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);
+        // Step 3 - Get adaptive ad size and return for setting on the ad view.
+        return AdSize.getCurrentOrientationAnchoredAdaptiveBannerAdSize(this, adWidth);
     }
 }
Index: app/src/main/java/com/koltech/komendydocsgo/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.koltech.komendydocsgo;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.Display;\r\nimport android.view.View;\r\nimport android.widget.FrameLayout;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.ads.AdRequest;\r\nimport com.google.android.gms.ads.AdSize;\r\nimport com.google.android.gms.ads.AdView;\r\nimport com.google.android.gms.ads.MobileAds;\r\nimport com.google.android.gms.ads.RequestConfiguration;\r\nimport com.google.android.gms.ads.initialization.InitializationStatus;\r\nimport com.google.android.gms.ads.initialization.OnInitializationCompleteListener;\r\n\r\nimport java.util.Arrays;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n    //private AdView AdView;\r\n    private AdView adView;\r\n    private FrameLayout adContainerView;\r\n    private static final String AD_UNIT_ID = \"ca-app-pub-4834003578511022/6879713249\";\r\n\r\n    private static long back_pressed;\r\n\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n       // setContentView(R.layout.activity_main);\r\n        setContentView(R.layout.menu_g);\r\n      //  MobileAds.initialize(this, \"ca-app-pub-4834003578511022~3179021828\");\r\n\r\n     //   mAdView = findViewById(R.id.adView);\r\n      //  AdRequest adRequest = new AdRequest.Builder().build();\r\n      //  mAdView.loadAd(adRequest);\r\n\r\n        // Initialize the Mobile Ads SDK.\r\n        MobileAds.initialize(this, new OnInitializationCompleteListener() {\r\n            @Override\r\n            public void onInitializationComplete(InitializationStatus initializationStatus) {}\r\n        });\r\n\r\n      //  MobileAds.setRequestConfiguration(\r\n       //         new RequestConfiguration.Builder().setTestDeviceIds(Arrays.asList(\"ABCDEF012345\")).build());\r\n\r\n\r\n        adContainerView = findViewById(R.id.ad_view_container_menu);\r\n\r\n        // Since we're loading the banner based on the adContainerView size, we need to wait until this\r\n        // view is laid out before we can get the width.\r\n        adContainerView.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                loadBanner();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    public void Celownik(View v){\r\n       // setContentView(R.layout.celownik);\r\n\r\n        Intent intent = new Intent(MainActivity.this,Celownik.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public void Radar(View v){\r\n        // setContentView(R.layout.celownik);\r\n\r\n        Intent intent = new Intent(MainActivity.this,Radar.class);\r\n        startActivity(intent);\r\n    }\r\n    public void KomendydoCwiczen(View v){\r\n        // setContentView(R.layout.celownik);\r\n\r\n        Intent intent = new Intent(MainActivity.this,Komendydocwiczen.class);\r\n        startActivity(intent);\r\n    }\r\n    public void Boty(View v){\r\n        // setContentView(R.layout.celownik);\r\n\r\n        Intent intent = new Intent(MainActivity.this,Boty.class);\r\n        startActivity(intent);\r\n    }\r\n    public void Bronie(View v){\r\n        // setContentView(R.layout.celownik);\r\n\r\n        Intent intent = new Intent(MainActivity.this,bronie.class);\r\n        startActivity(intent);\r\n    }\r\n    public void Granaty(View v){\r\n        // setContentView(R.layout.celownik);\r\n\r\n        Intent intent = new Intent(MainActivity.this,Granaty.class);\r\n        startActivity(intent);\r\n    }\r\n    public void FPS(View v){\r\n        // setContentView(R.layout.celownik);\r\n\r\n        Intent intent = new Intent(MainActivity.this,FPS.class);\r\n        startActivity(intent);\r\n    }\r\n    public void Hud(View v){\r\n        // setContentView(R.layout.celownik);\r\n\r\n        Intent intent = new Intent(MainActivity.this,HUD.class);\r\n        startActivity(intent);\r\n    }\r\n    public void Myszka(View v){\r\n        // setContentView(R.layout.celownik);\r\n\r\n        Intent intent = new Intent(MainActivity.this,Myszka.class);\r\n        startActivity(intent);\r\n    }\r\n    public void PozycjaBroni(View v){\r\n        // setContentView(R.layout.celownik);\r\n\r\n        Intent intent = new Intent(MainActivity.this,Pozycjabroni.class);\r\n        startActivity(intent);\r\n    }\r\n    public void Dzwienk(View v){\r\n        // setContentView(R.layout.celownik);\r\n\r\n        Intent intent = new Intent(MainActivity.this,Dzwienk.class);\r\n        startActivity(intent);\r\n    }\r\n    public void ZarzadzanieSerwerem(View v){\r\n        // setContentView(R.layout.celownik);\r\n\r\n        Intent intent = new Intent(MainActivity.this,ZarzondzanieSerwerem.class);\r\n        startActivity(intent);\r\n    }\r\n    public void Loncze(View v){\r\n        // setContentView(R.layout.celownik);\r\n\r\n        Intent intent = new Intent(MainActivity.this,Loncze.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public void Demo(View v){\r\n        // setContentView(R.layout.celownik);\r\n\r\n        Intent intent = new Intent(MainActivity.this,Demo.class);\r\n        startActivity(intent);\r\n    }\r\n    public void Inne(View v){\r\n        // setContentView(R.layout.celownik);\r\n\r\n        Intent intent = new Intent(MainActivity.this,Inne.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public void Bindy(View v){\r\n        // setContentView(R.layout.celownik);\r\n\r\n        Intent intent = new Intent(MainActivity.this,Bindy.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public void ParametryStartowe(View v){\r\n        // setContentView(R.layout.celownik);\r\n\r\n        Intent intent = new Intent(MainActivity.this,ParametryStartowe.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    @Override\r\n    public void onBackPressed()\r\n    {\r\n        if (back_pressed + 4000 > System.currentTimeMillis()) super.onBackPressed();\r\n        else Toast.makeText(getBaseContext(), \"Wciśnij jeszcze raz, aby zamknąć!\", Toast.LENGTH_SHORT).show();\r\n        back_pressed = System.currentTimeMillis();\r\n    }\r\n\r\n\r\n    /** Called when leaving the activity */\r\n    @Override\r\n    public void onPause() {\r\n        if (adView != null) {\r\n            adView.pause();\r\n        }\r\n        super.onPause();\r\n    }\r\n\r\n    /** Called when returning to the activity */\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if (adView != null) {\r\n            adView.resume();\r\n        }\r\n    }\r\n\r\n    /** Called before the activity is destroyed */\r\n    @Override\r\n    public void onDestroy() {\r\n        if (adView != null) {\r\n            adView.destroy();\r\n        }\r\n        super.onDestroy();\r\n    }\r\n\r\n    private void loadBanner() {\r\n        // Create an ad request.\r\n        adView = new AdView(this);\r\n        adView.setAdUnitId(AD_UNIT_ID);\r\n        adContainerView.removeAllViews();\r\n        adContainerView.addView(adView);\r\n\r\n        AdSize adSize = getAdSize();\r\n        adView.setAdSize(adSize);\r\n\r\n        AdRequest adRequest = new AdRequest.Builder().build();\r\n\r\n        // Start loading the ad in the background.\r\n        adView.loadAd(adRequest);\r\n    }\r\n\r\n    private AdSize getAdSize() {\r\n        // Determine the screen width (less decorations) to use for the ad width.\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n        DisplayMetrics outMetrics = new DisplayMetrics();\r\n        display.getMetrics(outMetrics);\r\n\r\n        float density = outMetrics.density;\r\n\r\n        float adWidthPixels = adContainerView.getWidth();\r\n\r\n        // If the ad hasn't been laid out, default to the full screen width.\r\n        if (adWidthPixels == 0) {\r\n            adWidthPixels = outMetrics.widthPixels;\r\n        }\r\n\r\n        int adWidth = (int) (adWidthPixels / density);\r\n\r\n        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/koltech/komendydocsgo/MainActivity.java b/app/src/main/java/com/koltech/komendydocsgo/MainActivity.java
--- a/app/src/main/java/com/koltech/komendydocsgo/MainActivity.java	
+++ b/app/src/main/java/com/koltech/komendydocsgo/MainActivity.java	
@@ -229,22 +229,17 @@
     }
 
     private AdSize getAdSize() {
-        // Determine the screen width (less decorations) to use for the ad width.
+        // Step 2 - Determine the screen width (less decorations) to use for the ad width.
         Display display = getWindowManager().getDefaultDisplay();
         DisplayMetrics outMetrics = new DisplayMetrics();
         display.getMetrics(outMetrics);
 
+        float widthPixels = outMetrics.widthPixels;
         float density = outMetrics.density;
 
-        float adWidthPixels = adContainerView.getWidth();
-
-        // If the ad hasn't been laid out, default to the full screen width.
-        if (adWidthPixels == 0) {
-            adWidthPixels = outMetrics.widthPixels;
-        }
+        int adWidth = (int) (widthPixels / density);
 
-        int adWidth = (int) (adWidthPixels / density);
-
-        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);
+        // Step 3 - Get adaptive ad size and return for setting on the ad view.
+        return AdSize.getCurrentOrientationAnchoredAdaptiveBannerAdSize(this, adWidth);
     }
 }
Index: app/src/main/java/com/koltech/komendydocsgo/Pozycjabroni.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.koltech.komendydocsgo;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.Display;\r\nimport android.widget.FrameLayout;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.ads.AdRequest;\r\nimport com.google.android.gms.ads.AdSize;\r\nimport com.google.android.gms.ads.AdView;\r\nimport com.google.android.gms.ads.MobileAds;\r\nimport com.google.android.gms.ads.initialization.InitializationStatus;\r\nimport com.google.android.gms.ads.initialization.OnInitializationCompleteListener;\r\n\r\npublic class Pozycjabroni extends AppCompatActivity {\r\n\r\n    private AdView adView;\r\n    private FrameLayout adContainerView;\r\n    private static final String AD_UNIT_ID = \"ca-app-pub-4834003578511022/4679805754\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.pozycjabroni);\r\n\r\n        MobileAds.initialize(this, new OnInitializationCompleteListener() {\r\n            @Override\r\n            public void onInitializationComplete(InitializationStatus initializationStatus) {\r\n            }\r\n        });\r\n\r\n        adContainerView = findViewById(R.id.ad_view_container_pozycjabroni);\r\n\r\n        // Since we're loading the banner based on the adContainerView size, we need to wait until this\r\n        // view is laid out before we can get the width.\r\n        adContainerView.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                loadBanner();\r\n            }\r\n        });\r\n    }\r\n\r\n    /** Called when leaving the activity */\r\n    @Override\r\n    public void onPause() {\r\n        if (adView != null) {\r\n            adView.pause();\r\n        }\r\n        super.onPause();\r\n    }\r\n\r\n    /** Called when returning to the activity */\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if (adView != null) {\r\n            adView.resume();\r\n        }\r\n    }\r\n\r\n    /** Called before the activity is destroyed */\r\n    @Override\r\n    public void onDestroy() {\r\n        if (adView != null) {\r\n            adView.destroy();\r\n        }\r\n        super.onDestroy();\r\n    }\r\n\r\n    private void loadBanner() {\r\n        // Create an ad request.\r\n        adView = new AdView(this);\r\n        adView.setAdUnitId(AD_UNIT_ID);\r\n        adContainerView.removeAllViews();\r\n        adContainerView.addView(adView);\r\n\r\n        AdSize adSize = getAdSize();\r\n        adView.setAdSize(adSize);\r\n\r\n        AdRequest adRequest = new AdRequest.Builder().build();\r\n\r\n        // Start loading the ad in the background.\r\n        adView.loadAd(adRequest);\r\n    }\r\n\r\n    private AdSize getAdSize() {\r\n        // Determine the screen width (less decorations) to use for the ad width.\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n        DisplayMetrics outMetrics = new DisplayMetrics();\r\n        display.getMetrics(outMetrics);\r\n\r\n        float density = outMetrics.density;\r\n\r\n        float adWidthPixels = adContainerView.getWidth();\r\n\r\n        // If the ad hasn't been laid out, default to the full screen width.\r\n        if (adWidthPixels == 0) {\r\n            adWidthPixels = outMetrics.widthPixels;\r\n        }\r\n\r\n        int adWidth = (int) (adWidthPixels / density);\r\n\r\n        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/koltech/komendydocsgo/Pozycjabroni.java b/app/src/main/java/com/koltech/komendydocsgo/Pozycjabroni.java
--- a/app/src/main/java/com/koltech/komendydocsgo/Pozycjabroni.java	
+++ b/app/src/main/java/com/koltech/komendydocsgo/Pozycjabroni.java	
@@ -87,22 +87,17 @@
     }
 
     private AdSize getAdSize() {
-        // Determine the screen width (less decorations) to use for the ad width.
+        // Step 2 - Determine the screen width (less decorations) to use for the ad width.
         Display display = getWindowManager().getDefaultDisplay();
         DisplayMetrics outMetrics = new DisplayMetrics();
         display.getMetrics(outMetrics);
 
+        float widthPixels = outMetrics.widthPixels;
         float density = outMetrics.density;
 
-        float adWidthPixels = adContainerView.getWidth();
-
-        // If the ad hasn't been laid out, default to the full screen width.
-        if (adWidthPixels == 0) {
-            adWidthPixels = outMetrics.widthPixels;
-        }
+        int adWidth = (int) (widthPixels / density);
 
-        int adWidth = (int) (adWidthPixels / density);
-
-        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);
+        // Step 3 - Get adaptive ad size and return for setting on the ad view.
+        return AdSize.getCurrentOrientationAnchoredAdaptiveBannerAdSize(this, adWidth);
     }
 }
Index: app/src/main/java/com/koltech/komendydocsgo/ParametryStartowe.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.koltech.komendydocsgo;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.Display;\r\nimport android.view.View;\r\nimport android.widget.FrameLayout;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.ads.AdRequest;\r\nimport com.google.android.gms.ads.AdSize;\r\nimport com.google.android.gms.ads.AdView;\r\nimport com.google.android.gms.ads.MobileAds;\r\nimport com.google.android.gms.ads.initialization.InitializationStatus;\r\nimport com.google.android.gms.ads.initialization.OnInitializationCompleteListener;\r\n\r\npublic class ParametryStartowe extends AppCompatActivity {\r\n\r\n    private AdView adView;\r\n    private FrameLayout adContainerView;\r\n    private static final String AD_UNIT_ID = \"ca-app-pub-4834003578511022/4679805754\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.parametry_startowe);\r\n\r\n        MobileAds.initialize(this, new OnInitializationCompleteListener() {\r\n            @Override\r\n            public void onInitializationComplete(InitializationStatus initializationStatus) {\r\n            }\r\n        });\r\n\r\n        adContainerView = findViewById(R.id.ad_view_container_parametryStartowe);\r\n\r\n        // Since we're loading the banner based on the adContainerView size, we need to wait until this\r\n        // view is laid out before we can get the width.\r\n        adContainerView.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                loadBanner();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    public void ParametryStartoweInst(View v){\r\n        // setContentView(R.layout.celownik);\r\n\r\n        Intent intent = new Intent(ParametryStartowe.this,InstrukcjaParametruwStartowych.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n\r\n    /** Called when leaving the activity */\r\n    @Override\r\n    public void onPause() {\r\n        if (adView != null) {\r\n            adView.pause();\r\n        }\r\n        super.onPause();\r\n    }\r\n\r\n    /** Called when returning to the activity */\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if (adView != null) {\r\n            adView.resume();\r\n        }\r\n    }\r\n\r\n    /** Called before the activity is destroyed */\r\n    @Override\r\n    public void onDestroy() {\r\n        if (adView != null) {\r\n            adView.destroy();\r\n        }\r\n        super.onDestroy();\r\n    }\r\n\r\n    private void loadBanner() {\r\n        // Create an ad request.\r\n        adView = new AdView(this);\r\n        adView.setAdUnitId(AD_UNIT_ID);\r\n        adContainerView.removeAllViews();\r\n        adContainerView.addView(adView);\r\n\r\n        AdSize adSize = getAdSize();\r\n        adView.setAdSize(adSize);\r\n\r\n        AdRequest adRequest = new AdRequest.Builder().build();\r\n\r\n        // Start loading the ad in the background.\r\n        adView.loadAd(adRequest);\r\n    }\r\n\r\n    private AdSize getAdSize() {\r\n        // Determine the screen width (less decorations) to use for the ad width.\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n        DisplayMetrics outMetrics = new DisplayMetrics();\r\n        display.getMetrics(outMetrics);\r\n\r\n        float density = outMetrics.density;\r\n\r\n        float adWidthPixels = adContainerView.getWidth();\r\n\r\n        // If the ad hasn't been laid out, default to the full screen width.\r\n        if (adWidthPixels == 0) {\r\n            adWidthPixels = outMetrics.widthPixels;\r\n        }\r\n\r\n        int adWidth = (int) (adWidthPixels / density);\r\n\r\n        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/koltech/komendydocsgo/ParametryStartowe.java b/app/src/main/java/com/koltech/komendydocsgo/ParametryStartowe.java
--- a/app/src/main/java/com/koltech/komendydocsgo/ParametryStartowe.java	
+++ b/app/src/main/java/com/koltech/komendydocsgo/ParametryStartowe.java	
@@ -98,22 +98,17 @@
     }
 
     private AdSize getAdSize() {
-        // Determine the screen width (less decorations) to use for the ad width.
+        // Step 2 - Determine the screen width (less decorations) to use for the ad width.
         Display display = getWindowManager().getDefaultDisplay();
         DisplayMetrics outMetrics = new DisplayMetrics();
         display.getMetrics(outMetrics);
 
+        float widthPixels = outMetrics.widthPixels;
         float density = outMetrics.density;
 
-        float adWidthPixels = adContainerView.getWidth();
-
-        // If the ad hasn't been laid out, default to the full screen width.
-        if (adWidthPixels == 0) {
-            adWidthPixels = outMetrics.widthPixels;
-        }
+        int adWidth = (int) (widthPixels / density);
 
-        int adWidth = (int) (adWidthPixels / density);
-
-        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);
+        // Step 3 - Get adaptive ad size and return for setting on the ad view.
+        return AdSize.getCurrentOrientationAnchoredAdaptiveBannerAdSize(this, adWidth);
     }
 }
Index: app/src/main/java/com/koltech/komendydocsgo/Bindy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.koltech.komendydocsgo;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.Display;\r\nimport android.widget.FrameLayout;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.ads.AdRequest;\r\nimport com.google.android.gms.ads.AdSize;\r\nimport com.google.android.gms.ads.AdView;\r\nimport com.google.android.gms.ads.MobileAds;\r\nimport com.google.android.gms.ads.initialization.InitializationStatus;\r\nimport com.google.android.gms.ads.initialization.OnInitializationCompleteListener;\r\n\r\npublic class Bindy extends AppCompatActivity {\r\n\r\n\r\n    private AdView adView;\r\n    private FrameLayout adContainerView;\r\n    private static final String AD_UNIT_ID = \"ca-app-pub-4834003578511022/8583268349\";\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.bindy);\r\n        MobileAds.initialize(this, new OnInitializationCompleteListener() {\r\n            @Override\r\n            public void onInitializationComplete(InitializationStatus initializationStatus) {\r\n            }\r\n        });\r\n\r\n\r\n        adContainerView = findViewById(R.id.ad_view_container_Bindy);\r\n\r\n        // Since we're loading the banner based on the adContainerView size, we need to wait until this\r\n        // view is laid out before we can get the width.\r\n        adContainerView.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                loadBanner();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    /** Called when leaving the activity */\r\n    @Override\r\n    public void onPause() {\r\n        if (adView != null) {\r\n            adView.pause();\r\n        }\r\n        super.onPause();\r\n    }\r\n\r\n    /** Called when returning to the activity */\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if (adView != null) {\r\n            adView.resume();\r\n        }\r\n    }\r\n\r\n    /** Called before the activity is destroyed */\r\n    @Override\r\n    public void onDestroy() {\r\n        if (adView != null) {\r\n            adView.destroy();\r\n        }\r\n        super.onDestroy();\r\n    }\r\n\r\n    private void loadBanner() {\r\n        // Create an ad request.\r\n        adView = new AdView(this);\r\n        adView.setAdUnitId(AD_UNIT_ID);\r\n        adContainerView.removeAllViews();\r\n        adContainerView.addView(adView);\r\n\r\n        AdSize adSize = getAdSize();\r\n        adView.setAdSize(adSize);\r\n\r\n        AdRequest adRequest = new AdRequest.Builder().build();\r\n\r\n        // Start loading the ad in the background.\r\n        adView.loadAd(adRequest);\r\n    }\r\n\r\n    private AdSize getAdSize() {\r\n        // Determine the screen width (less decorations) to use for the ad width.\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n        DisplayMetrics outMetrics = new DisplayMetrics();\r\n        display.getMetrics(outMetrics);\r\n\r\n        float density = outMetrics.density;\r\n\r\n        float adWidthPixels = adContainerView.getWidth();\r\n\r\n        // If the ad hasn't been laid out, default to the full screen width.\r\n        if (adWidthPixels == 0) {\r\n            adWidthPixels = outMetrics.widthPixels;\r\n        }\r\n\r\n        int adWidth = (int) (adWidthPixels / density);\r\n\r\n        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);\r\n    }\r\n\r\n\r\n\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/koltech/komendydocsgo/Bindy.java b/app/src/main/java/com/koltech/komendydocsgo/Bindy.java
--- a/app/src/main/java/com/koltech/komendydocsgo/Bindy.java	
+++ b/app/src/main/java/com/koltech/komendydocsgo/Bindy.java	
@@ -91,23 +91,18 @@
     }
 
     private AdSize getAdSize() {
-        // Determine the screen width (less decorations) to use for the ad width.
+        // Step 2 - Determine the screen width (less decorations) to use for the ad width.
         Display display = getWindowManager().getDefaultDisplay();
         DisplayMetrics outMetrics = new DisplayMetrics();
         display.getMetrics(outMetrics);
 
+        float widthPixels = outMetrics.widthPixels;
         float density = outMetrics.density;
 
-        float adWidthPixels = adContainerView.getWidth();
-
-        // If the ad hasn't been laid out, default to the full screen width.
-        if (adWidthPixels == 0) {
-            adWidthPixels = outMetrics.widthPixels;
-        }
+        int adWidth = (int) (widthPixels / density);
 
-        int adWidth = (int) (adWidthPixels / density);
-
-        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);
+        // Step 3 - Get adaptive ad size and return for setting on the ad view.
+        return AdSize.getCurrentOrientationAnchoredAdaptiveBannerAdSize(this, adWidth);
     }
 
 
Index: app/src/main/java/com/koltech/komendydocsgo/ZarzondzanieSerwerem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.koltech.komendydocsgo;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.Display;\r\nimport android.widget.FrameLayout;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.ads.AdRequest;\r\nimport com.google.android.gms.ads.AdSize;\r\nimport com.google.android.gms.ads.AdView;\r\nimport com.google.android.gms.ads.MobileAds;\r\nimport com.google.android.gms.ads.initialization.InitializationStatus;\r\nimport com.google.android.gms.ads.initialization.OnInitializationCompleteListener;\r\n\r\npublic class ZarzondzanieSerwerem extends AppCompatActivity {\r\n\r\n    private AdView adView;\r\n    private FrameLayout adContainerView;\r\n    private static final String AD_UNIT_ID = \"ca-app-pub-4834003578511022/4679805754\";\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.zarzadzanieserwerem);\r\n\r\n        MobileAds.initialize(this, new OnInitializationCompleteListener() {\r\n            @Override\r\n            public void onInitializationComplete(InitializationStatus initializationStatus) {\r\n            }\r\n        });\r\n\r\n        adContainerView = findViewById(R.id.ad_view_container_ZarzondzanieSer);\r\n\r\n        // Since we're loading the banner based on the adContainerView size, we need to wait until this\r\n        // view is laid out before we can get the width.\r\n        adContainerView.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                loadBanner();\r\n            }\r\n        });\r\n    }\r\n\r\n    /** Called when leaving the activity */\r\n    @Override\r\n    public void onPause() {\r\n        if (adView != null) {\r\n            adView.pause();\r\n        }\r\n        super.onPause();\r\n    }\r\n\r\n    /** Called when returning to the activity */\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if (adView != null) {\r\n            adView.resume();\r\n        }\r\n    }\r\n\r\n    /** Called before the activity is destroyed */\r\n    @Override\r\n    public void onDestroy() {\r\n        if (adView != null) {\r\n            adView.destroy();\r\n        }\r\n        super.onDestroy();\r\n    }\r\n\r\n    private void loadBanner() {\r\n        // Create an ad request.\r\n        adView = new AdView(this);\r\n        adView.setAdUnitId(AD_UNIT_ID);\r\n        adContainerView.removeAllViews();\r\n        adContainerView.addView(adView);\r\n\r\n        AdSize adSize = getAdSize();\r\n        adView.setAdSize(adSize);\r\n\r\n        AdRequest adRequest = new AdRequest.Builder().build();\r\n\r\n        // Start loading the ad in the background.\r\n        adView.loadAd(adRequest);\r\n    }\r\n\r\n    private AdSize getAdSize() {\r\n        // Determine the screen width (less decorations) to use for the ad width.\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n        DisplayMetrics outMetrics = new DisplayMetrics();\r\n        display.getMetrics(outMetrics);\r\n\r\n        float density = outMetrics.density;\r\n\r\n        float adWidthPixels = adContainerView.getWidth();\r\n\r\n        // If the ad hasn't been laid out, default to the full screen width.\r\n        if (adWidthPixels == 0) {\r\n            adWidthPixels = outMetrics.widthPixels;\r\n        }\r\n\r\n        int adWidth = (int) (adWidthPixels / density);\r\n\r\n        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/koltech/komendydocsgo/ZarzondzanieSerwerem.java b/app/src/main/java/com/koltech/komendydocsgo/ZarzondzanieSerwerem.java
--- a/app/src/main/java/com/koltech/komendydocsgo/ZarzondzanieSerwerem.java	
+++ b/app/src/main/java/com/koltech/komendydocsgo/ZarzondzanieSerwerem.java	
@@ -88,22 +88,17 @@
     }
 
     private AdSize getAdSize() {
-        // Determine the screen width (less decorations) to use for the ad width.
+        // Step 2 - Determine the screen width (less decorations) to use for the ad width.
         Display display = getWindowManager().getDefaultDisplay();
         DisplayMetrics outMetrics = new DisplayMetrics();
         display.getMetrics(outMetrics);
 
+        float widthPixels = outMetrics.widthPixels;
         float density = outMetrics.density;
 
-        float adWidthPixels = adContainerView.getWidth();
-
-        // If the ad hasn't been laid out, default to the full screen width.
-        if (adWidthPixels == 0) {
-            adWidthPixels = outMetrics.widthPixels;
-        }
+        int adWidth = (int) (widthPixels / density);
 
-        int adWidth = (int) (adWidthPixels / density);
-
-        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);
+        // Step 3 - Get adaptive ad size and return for setting on the ad view.
+        return AdSize.getCurrentOrientationAnchoredAdaptiveBannerAdSize(this, adWidth);
     }
 }
Index: app/src/main/java/com/koltech/komendydocsgo/Radar.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.koltech.komendydocsgo;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.Display;\r\nimport android.widget.FrameLayout;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.ads.AdRequest;\r\nimport com.google.android.gms.ads.AdSize;\r\nimport com.google.android.gms.ads.AdView;\r\nimport com.google.android.gms.ads.MobileAds;\r\nimport com.google.android.gms.ads.initialization.InitializationStatus;\r\nimport com.google.android.gms.ads.initialization.OnInitializationCompleteListener;\r\n\r\npublic class Radar extends AppCompatActivity {\r\n\r\n\r\n    private AdView adView;\r\n    private FrameLayout adContainerView;\r\n    private static final String AD_UNIT_ID = \"ca-app-pub-4834003578511022/4679805754\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.radar);\r\n\r\n        MobileAds.initialize(this, new OnInitializationCompleteListener() {\r\n            @Override\r\n            public void onInitializationComplete(InitializationStatus initializationStatus) {\r\n            }\r\n        });\r\n\r\n        adContainerView = findViewById(R.id.ad_view_container_Radar);\r\n\r\n        // Since we're loading the banner based on the adContainerView size, we need to wait until this\r\n        // view is laid out before we can get the width.\r\n        adContainerView.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                loadBanner();\r\n            }\r\n        });\r\n    }\r\n\r\n    /** Called when leaving the activity */\r\n    @Override\r\n    public void onPause() {\r\n        if (adView != null) {\r\n            adView.pause();\r\n        }\r\n        super.onPause();\r\n    }\r\n\r\n    /** Called when returning to the activity */\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if (adView != null) {\r\n            adView.resume();\r\n        }\r\n    }\r\n\r\n    /** Called before the activity is destroyed */\r\n    @Override\r\n    public void onDestroy() {\r\n        if (adView != null) {\r\n            adView.destroy();\r\n        }\r\n        super.onDestroy();\r\n    }\r\n\r\n    private void loadBanner() {\r\n        // Create an ad request.\r\n        adView = new AdView(this);\r\n        adView.setAdUnitId(AD_UNIT_ID);\r\n        adContainerView.removeAllViews();\r\n        adContainerView.addView(adView);\r\n\r\n        AdSize adSize = getAdSize();\r\n        adView.setAdSize(adSize);\r\n\r\n        AdRequest adRequest = new AdRequest.Builder().build();\r\n\r\n        // Start loading the ad in the background.\r\n        adView.loadAd(adRequest);\r\n    }\r\n\r\n    private AdSize getAdSize() {\r\n        // Determine the screen width (less decorations) to use for the ad width.\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n        DisplayMetrics outMetrics = new DisplayMetrics();\r\n        display.getMetrics(outMetrics);\r\n\r\n        float density = outMetrics.density;\r\n\r\n        float adWidthPixels = adContainerView.getWidth();\r\n\r\n        // If the ad hasn't been laid out, default to the full screen width.\r\n        if (adWidthPixels == 0) {\r\n            adWidthPixels = outMetrics.widthPixels;\r\n        }\r\n\r\n        int adWidth = (int) (adWidthPixels / density);\r\n\r\n        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/koltech/komendydocsgo/Radar.java b/app/src/main/java/com/koltech/komendydocsgo/Radar.java
--- a/app/src/main/java/com/koltech/komendydocsgo/Radar.java	
+++ b/app/src/main/java/com/koltech/komendydocsgo/Radar.java	
@@ -88,22 +88,17 @@
     }
 
     private AdSize getAdSize() {
-        // Determine the screen width (less decorations) to use for the ad width.
+        // Step 2 - Determine the screen width (less decorations) to use for the ad width.
         Display display = getWindowManager().getDefaultDisplay();
         DisplayMetrics outMetrics = new DisplayMetrics();
         display.getMetrics(outMetrics);
 
+        float widthPixels = outMetrics.widthPixels;
         float density = outMetrics.density;
 
-        float adWidthPixels = adContainerView.getWidth();
-
-        // If the ad hasn't been laid out, default to the full screen width.
-        if (adWidthPixels == 0) {
-            adWidthPixels = outMetrics.widthPixels;
-        }
+        int adWidth = (int) (widthPixels / density);
 
-        int adWidth = (int) (adWidthPixels / density);
-
-        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);
+        // Step 3 - Get adaptive ad size and return for setting on the ad view.
+        return AdSize.getCurrentOrientationAnchoredAdaptiveBannerAdSize(this, adWidth);
     }
 }
Index: app/src/main/java/com/koltech/komendydocsgo/Inne.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.koltech.komendydocsgo;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.Display;\r\nimport android.widget.FrameLayout;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.ads.AdRequest;\r\nimport com.google.android.gms.ads.AdSize;\r\nimport com.google.android.gms.ads.AdView;\r\nimport com.google.android.gms.ads.MobileAds;\r\nimport com.google.android.gms.ads.initialization.InitializationStatus;\r\nimport com.google.android.gms.ads.initialization.OnInitializationCompleteListener;\r\n\r\npublic class Inne extends AppCompatActivity {\r\n\r\n    private AdView adView;\r\n    private FrameLayout adContainerView;\r\n    private static final String AD_UNIT_ID = \"ca-app-pub-4834003578511022/4679805754\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.inne);\r\n\r\n\r\n        MobileAds.initialize(this, new OnInitializationCompleteListener() {\r\n            @Override\r\n            public void onInitializationComplete(InitializationStatus initializationStatus) {\r\n            }\r\n        });\r\n\r\n        adContainerView = findViewById(R.id.ad_view_container_Inne);\r\n\r\n        // Since we're loading the banner based on the adContainerView size, we need to wait until this\r\n        // view is laid out before we can get the width.\r\n        adContainerView.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                loadBanner();\r\n            }\r\n        });\r\n    }\r\n\r\n    /** Called when leaving the activity */\r\n    @Override\r\n    public void onPause() {\r\n        if (adView != null) {\r\n            adView.pause();\r\n        }\r\n        super.onPause();\r\n    }\r\n\r\n    /** Called when returning to the activity */\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if (adView != null) {\r\n            adView.resume();\r\n        }\r\n    }\r\n\r\n    /** Called before the activity is destroyed */\r\n    @Override\r\n    public void onDestroy() {\r\n        if (adView != null) {\r\n            adView.destroy();\r\n        }\r\n        super.onDestroy();\r\n    }\r\n\r\n    private void loadBanner() {\r\n        // Create an ad request.\r\n        adView = new AdView(this);\r\n        adView.setAdUnitId(AD_UNIT_ID);\r\n        adContainerView.removeAllViews();\r\n        adContainerView.addView(adView);\r\n\r\n        AdSize adSize = getAdSize();\r\n        adView.setAdSize(adSize);\r\n\r\n        AdRequest adRequest = new AdRequest.Builder().build();\r\n\r\n        // Start loading the ad in the background.\r\n        adView.loadAd(adRequest);\r\n    }\r\n\r\n    private AdSize getAdSize() {\r\n        // Determine the screen width (less decorations) to use for the ad width.\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n        DisplayMetrics outMetrics = new DisplayMetrics();\r\n        display.getMetrics(outMetrics);\r\n\r\n        float density = outMetrics.density;\r\n\r\n        float adWidthPixels = adContainerView.getWidth();\r\n\r\n        // If the ad hasn't been laid out, default to the full screen width.\r\n        if (adWidthPixels == 0) {\r\n            adWidthPixels = outMetrics.widthPixels;\r\n        }\r\n\r\n        int adWidth = (int) (adWidthPixels / density);\r\n\r\n        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/koltech/komendydocsgo/Inne.java b/app/src/main/java/com/koltech/komendydocsgo/Inne.java
--- a/app/src/main/java/com/koltech/komendydocsgo/Inne.java	
+++ b/app/src/main/java/com/koltech/komendydocsgo/Inne.java	
@@ -88,22 +88,17 @@
     }
 
     private AdSize getAdSize() {
-        // Determine the screen width (less decorations) to use for the ad width.
+        // Step 2 - Determine the screen width (less decorations) to use for the ad width.
         Display display = getWindowManager().getDefaultDisplay();
         DisplayMetrics outMetrics = new DisplayMetrics();
         display.getMetrics(outMetrics);
 
+        float widthPixels = outMetrics.widthPixels;
         float density = outMetrics.density;
 
-        float adWidthPixels = adContainerView.getWidth();
-
-        // If the ad hasn't been laid out, default to the full screen width.
-        if (adWidthPixels == 0) {
-            adWidthPixels = outMetrics.widthPixels;
-        }
+        int adWidth = (int) (widthPixels / density);
 
-        int adWidth = (int) (adWidthPixels / density);
-
-        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);
+        // Step 3 - Get adaptive ad size and return for setting on the ad view.
+        return AdSize.getCurrentOrientationAnchoredAdaptiveBannerAdSize(this, adWidth);
     }
 }
Index: app/src/main/java/com/koltech/komendydocsgo/Komendydocwiczen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.koltech.komendydocsgo;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.Display;\r\nimport android.widget.FrameLayout;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.ads.AdRequest;\r\nimport com.google.android.gms.ads.AdSize;\r\nimport com.google.android.gms.ads.AdView;\r\nimport com.google.android.gms.ads.MobileAds;\r\nimport com.google.android.gms.ads.initialization.InitializationStatus;\r\nimport com.google.android.gms.ads.initialization.OnInitializationCompleteListener;\r\n\r\npublic class Komendydocwiczen extends AppCompatActivity {\r\n\r\n    private AdView adView;\r\n    private FrameLayout adContainerView;\r\n    private static final String AD_UNIT_ID = \"ca-app-pub-4834003578511022/4679805754\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.komendydocwiczen);\r\n\r\n\r\n        MobileAds.initialize(this, new OnInitializationCompleteListener() {\r\n            @Override\r\n            public void onInitializationComplete(InitializationStatus initializationStatus) {\r\n            }\r\n        });\r\n\r\n        adContainerView = findViewById(R.id.ad_view_container_komendydocwiczen);\r\n\r\n        // Since we're loading the banner based on the adContainerView size, we need to wait until this\r\n        // view is laid out before we can get the width.\r\n        adContainerView.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                loadBanner();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /** Called when leaving the activity */\r\n    @Override\r\n    public void onPause() {\r\n        if (adView != null) {\r\n            adView.pause();\r\n        }\r\n        super.onPause();\r\n    }\r\n\r\n    /** Called when returning to the activity */\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if (adView != null) {\r\n            adView.resume();\r\n        }\r\n    }\r\n\r\n    /** Called before the activity is destroyed */\r\n    @Override\r\n    public void onDestroy() {\r\n        if (adView != null) {\r\n            adView.destroy();\r\n        }\r\n        super.onDestroy();\r\n    }\r\n\r\n    private void loadBanner() {\r\n        // Create an ad request.\r\n        adView = new AdView(this);\r\n        adView.setAdUnitId(AD_UNIT_ID);\r\n        adContainerView.removeAllViews();\r\n        adContainerView.addView(adView);\r\n\r\n        AdSize adSize = getAdSize();\r\n        adView.setAdSize(adSize);\r\n\r\n        AdRequest adRequest = new AdRequest.Builder().build();\r\n\r\n        // Start loading the ad in the background.\r\n        adView.loadAd(adRequest);\r\n    }\r\n\r\n    private AdSize getAdSize() {\r\n        // Determine the screen width (less decorations) to use for the ad width.\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n        DisplayMetrics outMetrics = new DisplayMetrics();\r\n        display.getMetrics(outMetrics);\r\n\r\n        float density = outMetrics.density;\r\n\r\n        float adWidthPixels = adContainerView.getWidth();\r\n\r\n        // If the ad hasn't been laid out, default to the full screen width.\r\n        if (adWidthPixels == 0) {\r\n            adWidthPixels = outMetrics.widthPixels;\r\n        }\r\n\r\n        int adWidth = (int) (adWidthPixels / density);\r\n\r\n        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/koltech/komendydocsgo/Komendydocwiczen.java b/app/src/main/java/com/koltech/komendydocsgo/Komendydocwiczen.java
--- a/app/src/main/java/com/koltech/komendydocsgo/Komendydocwiczen.java	
+++ b/app/src/main/java/com/koltech/komendydocsgo/Komendydocwiczen.java	
@@ -89,22 +89,17 @@
     }
 
     private AdSize getAdSize() {
-        // Determine the screen width (less decorations) to use for the ad width.
+        // Step 2 - Determine the screen width (less decorations) to use for the ad width.
         Display display = getWindowManager().getDefaultDisplay();
         DisplayMetrics outMetrics = new DisplayMetrics();
         display.getMetrics(outMetrics);
 
+        float widthPixels = outMetrics.widthPixels;
         float density = outMetrics.density;
 
-        float adWidthPixels = adContainerView.getWidth();
-
-        // If the ad hasn't been laid out, default to the full screen width.
-        if (adWidthPixels == 0) {
-            adWidthPixels = outMetrics.widthPixels;
-        }
+        int adWidth = (int) (widthPixels / density);
 
-        int adWidth = (int) (adWidthPixels / density);
-
-        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);
+        // Step 3 - Get adaptive ad size and return for setting on the ad view.
+        return AdSize.getCurrentOrientationAnchoredAdaptiveBannerAdSize(this, adWidth);
     }
 }
Index: app/src/main/java/com/koltech/komendydocsgo/bronie.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.koltech.komendydocsgo;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.os.Bundle;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.Display;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.FrameLayout;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.ads.AdRequest;\r\nimport com.google.android.gms.ads.AdSize;\r\nimport com.google.android.gms.ads.AdView;\r\nimport com.google.android.gms.ads.MobileAds;\r\nimport com.google.android.gms.ads.initialization.InitializationStatus;\r\nimport com.google.android.gms.ads.initialization.OnInitializationCompleteListener;\r\n\r\npublic class bronie extends AppCompatActivity {\r\n    private AdView adView;\r\n    private FrameLayout adContainerView;\r\n    private static final String AD_UNIT_ID = \"ca-app-pub-4834003578511022/4679805754\";\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.bronie);\r\n        MobileAds.initialize(this, new OnInitializationCompleteListener() {\r\n            @Override\r\n            public void onInitializationComplete(InitializationStatus initializationStatus) {\r\n            }\r\n        });\r\n        adContainerView = findViewById(R.id.ad_view_container_Bronie);\r\n\r\n        // Since we're loading the banner based on the adContainerView size, we need to wait until this\r\n        // view is laid out before we can get the width.\r\n        adContainerView.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                loadBanner();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n   public void Noze(View w){\r\n        setContentView(R.layout.noze);\r\n    }\r\n\r\n    public void NozeBulider(View w){\r\n        AlertDialog.Builder mBuilder = new AlertDialog.Builder(bronie.this);\r\n        View mView = getLayoutInflater().inflate(R.layout.noze_pop_up, null);\r\n        TextView wiad = (TextView) mView.findViewById(R.id.Nozeinfo);\r\n        ImageView imageView = (ImageView) mView.findViewById(R.id.imagenuz);\r\n        AdView mxAdView = (AdView) mView.findViewById(R.id.adViewnuzinfo);\r\n        AdRequest adRequest = new AdRequest.Builder().build();\r\n        mxAdView.loadAd(adRequest);\r\n\r\n\r\n        String comenda=w.getTag().toString();\r\n\r\n        Drawable drawable = null;\r\n        //drawable = getResources().getDrawable(R.drawable.knife_t);\r\n        if(comenda.contains(\"knife\")){\r\n            drawable = getResources().getDrawable(R.drawable.knife);\r\n\r\n        }\r\n        if(comenda.contains(\"knife_t\")){\r\n            drawable = getResources().getDrawable(R.drawable.knife_t);\r\n\r\n        }\r\n        if(comenda.contains(\"knife_css\")){\r\n            drawable = getResources().getDrawable(R.drawable.css);\r\n\r\n        }\r\n        if(comenda.contains(\"bayonet\")){\r\n            drawable = getResources().getDrawable(R.drawable.bayonet);\r\n\r\n        }\r\n        if(comenda.contains(\"knife_flip\")){\r\n            drawable = getResources().getDrawable(R.drawable.flip);\r\n\r\n        }\r\n        if(comenda.contains(\"knife_gut\")){\r\n            drawable = getResources().getDrawable(R.drawable.gut);\r\n\r\n        }\r\n        if(comenda.contains(\"knife_karambit\")){\r\n            drawable = getResources().getDrawable(R.drawable.karambit);\r\n\r\n        }\r\n        if(comenda.contains(\"knife_m9\")){\r\n            drawable = getResources().getDrawable(R.drawable.m9_bayonet);\r\n\r\n        }\r\n        if(comenda.contains(\"knife_tactical\")){\r\n            drawable = getResources().getDrawable(R.drawable.tactical);\r\n\r\n        }\r\n        if(comenda.contains(\"knife_butterfly\")){\r\n            drawable = getResources().getDrawable(R.drawable.baterfly);\r\n\r\n        }\r\n        if(comenda.contains(\"knife_falchion\")){\r\n            drawable = getResources().getDrawable(R.drawable.falchion);\r\n\r\n        }\r\n        if(comenda.contains(\"knife_push\")){\r\n            drawable = getResources().getDrawable(R.drawable.push);\r\n\r\n        }\r\n        if(comenda.contains(\"knifegg\")){\r\n            drawable = getResources().getDrawable(R.drawable.knifegg);\r\n\r\n        }\r\n        if(comenda.contains(\"knife_survival_bowie\")){\r\n            drawable = getResources().getDrawable(R.drawable.survival_bowie);\r\n\r\n        }\r\n        if(comenda.contains(\"knife_ursus\")){\r\n            drawable = getResources().getDrawable(R.drawable.ursus);\r\n\r\n        }\r\n        if(comenda.contains(\"knife_gypsy_jackknife\")){\r\n            drawable = getResources().getDrawable(R.drawable.jackknife);\r\n\r\n        }\r\n        if(comenda.contains(\"knife_stiletto\")){\r\n            drawable = getResources().getDrawable(R.drawable.stiletto);\r\n\r\n        }\r\n        if(comenda.contains(\"knife_widowmaker\")){\r\n            drawable = getResources().getDrawable(R.drawable.widolmakier);\r\n\r\n        }\r\n        if(comenda.contains(\"knife_ghost\")){\r\n            drawable = getResources().getDrawable(R.drawable.gost);\r\n\r\n        }\r\n        if(comenda.contains(\"knife_canis\")){\r\n            drawable = getResources().getDrawable(R.drawable.canis);\r\n\r\n        }\r\n        if(comenda.contains(\"knife_cord\")){\r\n            drawable = getResources().getDrawable(R.drawable.cord);\r\n\r\n        }\r\n        if(comenda.contains(\"knife_skeleton\")){\r\n            drawable = getResources().getDrawable(R.drawable.skeleton);\r\n\r\n        }\r\n        if(comenda.contains(\"knife_outdoor\")){\r\n            drawable = getResources().getDrawable(R.drawable.outdoor);\r\n\r\n        }\r\n\r\n        imageView.setImageDrawable(drawable);\r\n\r\n\r\n\r\n\r\n\r\n\r\n       // Button ok = (Button) mView.findViewById(R.id.powiadmienieok);\r\n        try {\r\n\r\n\r\n        wiad.setText(comenda+\"; \");\r\n        } catch (Exception e) {\r\n            wiad.setText(\"error\");\r\n            e.printStackTrace();\r\n        }\r\n\r\n        mBuilder.setView(mView);\r\n        final AlertDialog dialog = mBuilder.create();\r\n\r\n        dialog.show();\r\n\r\n    }\r\n\r\n   public void Pistolety(View w){\r\n        setContentView(R.layout.pistolety);\r\n    }\r\n    public void SMG(View v){\r\n        setContentView(R.layout.smg);\r\n    }\r\n    public void Hewi(View v){\r\n        setContentView(R.layout.bron_cienszka);\r\n    }\r\n    public void Karabiny(View v){\r\n        setContentView(R.layout.karabiny);\r\n    }\r\n    public void Granaty(View v){\r\n        setContentView(R.layout.granaty);\r\n    }\r\n    public void Ekwipunek(View v){\r\n        setContentView(R.layout.ekwipunek);\r\n    }\r\n\r\n    public void DangerZone(View v){\r\n        setContentView(R.layout.danger_zone);\r\n    }\r\n\r\n    public void Inne(View v){\r\n        setContentView(R.layout.brn_inne);\r\n    }\r\n\r\n\r\n\r\n    /** Called when leaving the activity */\r\n    @Override\r\n    public void onPause() {\r\n        if (adView != null) {\r\n            adView.pause();\r\n        }\r\n        super.onPause();\r\n    }\r\n\r\n    /** Called when returning to the activity */\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if (adView != null) {\r\n            adView.resume();\r\n        }\r\n    }\r\n\r\n    /** Called before the activity is destroyed */\r\n    @Override\r\n    public void onDestroy() {\r\n        if (adView != null) {\r\n            adView.destroy();\r\n        }\r\n        super.onDestroy();\r\n    }\r\n\r\n    private void loadBanner() {\r\n        // Create an ad request.\r\n        adView = new AdView(this);\r\n        adView.setAdUnitId(AD_UNIT_ID);\r\n        adContainerView.removeAllViews();\r\n        adContainerView.addView(adView);\r\n\r\n        AdSize adSize = getAdSize();\r\n        adView.setAdSize(adSize);\r\n\r\n        AdRequest adRequest = new AdRequest.Builder().build();\r\n\r\n        // Start loading the ad in the background.\r\n        adView.loadAd(adRequest);\r\n    }\r\n\r\n    private AdSize getAdSize() {\r\n        // Determine the screen width (less decorations) to use for the ad width.\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n        DisplayMetrics outMetrics = new DisplayMetrics();\r\n        display.getMetrics(outMetrics);\r\n\r\n        float density = outMetrics.density;\r\n\r\n        float adWidthPixels = adContainerView.getWidth();\r\n\r\n        // If the ad hasn't been laid out, default to the full screen width.\r\n        if (adWidthPixels == 0) {\r\n            adWidthPixels = outMetrics.widthPixels;\r\n        }\r\n\r\n        int adWidth = (int) (adWidthPixels / density);\r\n\r\n        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);\r\n    }\r\n\r\n\r\n\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/koltech/komendydocsgo/bronie.java b/app/src/main/java/com/koltech/komendydocsgo/bronie.java
--- a/app/src/main/java/com/koltech/komendydocsgo/bronie.java	
+++ b/app/src/main/java/com/koltech/komendydocsgo/bronie.java	
@@ -256,23 +256,18 @@
     }
 
     private AdSize getAdSize() {
-        // Determine the screen width (less decorations) to use for the ad width.
+        // Step 2 - Determine the screen width (less decorations) to use for the ad width.
         Display display = getWindowManager().getDefaultDisplay();
         DisplayMetrics outMetrics = new DisplayMetrics();
         display.getMetrics(outMetrics);
 
+        float widthPixels = outMetrics.widthPixels;
         float density = outMetrics.density;
 
-        float adWidthPixels = adContainerView.getWidth();
-
-        // If the ad hasn't been laid out, default to the full screen width.
-        if (adWidthPixels == 0) {
-            adWidthPixels = outMetrics.widthPixels;
-        }
+        int adWidth = (int) (widthPixels / density);
 
-        int adWidth = (int) (adWidthPixels / density);
-
-        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);
+        // Step 3 - Get adaptive ad size and return for setting on the ad view.
+        return AdSize.getCurrentOrientationAnchoredAdaptiveBannerAdSize(this, adWidth);
     }
 
 
Index: app/src/main/java/com/koltech/komendydocsgo/Boty.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.koltech.komendydocsgo;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.Display;\r\nimport android.widget.FrameLayout;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.ads.AdRequest;\r\nimport com.google.android.gms.ads.AdSize;\r\nimport com.google.android.gms.ads.AdView;\r\nimport com.google.android.gms.ads.MobileAds;\r\nimport com.google.android.gms.ads.initialization.InitializationStatus;\r\nimport com.google.android.gms.ads.initialization.OnInitializationCompleteListener;\r\n\r\npublic class Boty extends AppCompatActivity {\r\n\r\n    private AdView adView;\r\n    private FrameLayout adContainerView;\r\n    private static final String AD_UNIT_ID = \"ca-app-pub-4834003578511022/4679805754\";\r\n\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.boty);\r\n        MobileAds.initialize(this, new OnInitializationCompleteListener() {\r\n            @Override\r\n            public void onInitializationComplete(InitializationStatus initializationStatus) {\r\n            }\r\n        });\r\n\r\n        adContainerView = findViewById(R.id.ad_view_container_Boty);\r\n\r\n        // Since we're loading the banner based on the adContainerView size, we need to wait until this\r\n        // view is laid out before we can get the width.\r\n        adContainerView.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                loadBanner();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    /** Called when leaving the activity */\r\n    @Override\r\n    public void onPause() {\r\n        if (adView != null) {\r\n            adView.pause();\r\n        }\r\n        super.onPause();\r\n    }\r\n\r\n    /** Called when returning to the activity */\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if (adView != null) {\r\n            adView.resume();\r\n        }\r\n    }\r\n\r\n    /** Called before the activity is destroyed */\r\n    @Override\r\n    public void onDestroy() {\r\n        if (adView != null) {\r\n            adView.destroy();\r\n        }\r\n        super.onDestroy();\r\n    }\r\n\r\n    private void loadBanner() {\r\n        // Create an ad request.\r\n        adView = new AdView(this);\r\n        adView.setAdUnitId(AD_UNIT_ID);\r\n        adContainerView.removeAllViews();\r\n        adContainerView.addView(adView);\r\n\r\n        AdSize adSize = getAdSize();\r\n        adView.setAdSize(adSize);\r\n\r\n        AdRequest adRequest = new AdRequest.Builder().build();\r\n\r\n        // Start loading the ad in the background.\r\n        adView.loadAd(adRequest);\r\n    }\r\n\r\n    private AdSize getAdSize() {\r\n        // Determine the screen width (less decorations) to use for the ad width.\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n        DisplayMetrics outMetrics = new DisplayMetrics();\r\n        display.getMetrics(outMetrics);\r\n\r\n        float density = outMetrics.density;\r\n\r\n        float adWidthPixels = adContainerView.getWidth();\r\n\r\n        // If the ad hasn't been laid out, default to the full screen width.\r\n        if (adWidthPixels == 0) {\r\n            adWidthPixels = outMetrics.widthPixels;\r\n        }\r\n\r\n        int adWidth = (int) (adWidthPixels / density);\r\n\r\n        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);\r\n    }\r\n\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/koltech/komendydocsgo/Boty.java b/app/src/main/java/com/koltech/komendydocsgo/Boty.java
--- a/app/src/main/java/com/koltech/komendydocsgo/Boty.java	
+++ b/app/src/main/java/com/koltech/komendydocsgo/Boty.java	
@@ -91,23 +91,18 @@
     }
 
     private AdSize getAdSize() {
-        // Determine the screen width (less decorations) to use for the ad width.
+        // Step 2 - Determine the screen width (less decorations) to use for the ad width.
         Display display = getWindowManager().getDefaultDisplay();
         DisplayMetrics outMetrics = new DisplayMetrics();
         display.getMetrics(outMetrics);
 
+        float widthPixels = outMetrics.widthPixels;
         float density = outMetrics.density;
 
-        float adWidthPixels = adContainerView.getWidth();
-
-        // If the ad hasn't been laid out, default to the full screen width.
-        if (adWidthPixels == 0) {
-            adWidthPixels = outMetrics.widthPixels;
-        }
+        int adWidth = (int) (widthPixels / density);
 
-        int adWidth = (int) (adWidthPixels / density);
-
-        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);
+        // Step 3 - Get adaptive ad size and return for setting on the ad view.
+        return AdSize.getCurrentOrientationAnchoredAdaptiveBannerAdSize(this, adWidth);
     }
 
 }
Index: app/src/main/java/com/koltech/komendydocsgo/Demo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.koltech.komendydocsgo;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.Display;\r\nimport android.widget.FrameLayout;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.ads.AdRequest;\r\nimport com.google.android.gms.ads.AdSize;\r\nimport com.google.android.gms.ads.AdView;\r\nimport com.google.android.gms.ads.MobileAds;\r\nimport com.google.android.gms.ads.initialization.InitializationStatus;\r\nimport com.google.android.gms.ads.initialization.OnInitializationCompleteListener;\r\n\r\npublic class Demo extends AppCompatActivity {\r\n\r\n    private AdView adView;\r\n    private FrameLayout adContainerView;\r\n    private static final String AD_UNIT_ID = \"ca-app-pub-4834003578511022/4679805754\";\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.demo);\r\n\r\n        MobileAds.initialize(this, new OnInitializationCompleteListener() {\r\n            @Override\r\n            public void onInitializationComplete(InitializationStatus initializationStatus) {\r\n            }\r\n        });\r\n\r\n        adContainerView = findViewById(R.id.ad_view_container_Demo);\r\n\r\n        // Since we're loading the banner based on the adContainerView size, we need to wait until this\r\n        // view is laid out before we can get the width.\r\n        adContainerView.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                loadBanner();\r\n            }\r\n        });\r\n    }\r\n\r\n    /** Called when leaving the activity */\r\n    @Override\r\n    public void onPause() {\r\n        if (adView != null) {\r\n            adView.pause();\r\n        }\r\n        super.onPause();\r\n    }\r\n\r\n    /** Called when returning to the activity */\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if (adView != null) {\r\n            adView.resume();\r\n        }\r\n    }\r\n\r\n    /** Called before the activity is destroyed */\r\n    @Override\r\n    public void onDestroy() {\r\n        if (adView != null) {\r\n            adView.destroy();\r\n        }\r\n        super.onDestroy();\r\n    }\r\n\r\n    private void loadBanner() {\r\n        // Create an ad request.\r\n        adView = new AdView(this);\r\n        adView.setAdUnitId(AD_UNIT_ID);\r\n        adContainerView.removeAllViews();\r\n        adContainerView.addView(adView);\r\n\r\n        AdSize adSize = getAdSize();\r\n        adView.setAdSize(adSize);\r\n\r\n        AdRequest adRequest = new AdRequest.Builder().build();\r\n\r\n        // Start loading the ad in the background.\r\n        adView.loadAd(adRequest);\r\n    }\r\n\r\n    private AdSize getAdSize() {\r\n        // Determine the screen width (less decorations) to use for the ad width.\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n        DisplayMetrics outMetrics = new DisplayMetrics();\r\n        display.getMetrics(outMetrics);\r\n\r\n        float density = outMetrics.density;\r\n\r\n        float adWidthPixels = adContainerView.getWidth();\r\n\r\n        // If the ad hasn't been laid out, default to the full screen width.\r\n        if (adWidthPixels == 0) {\r\n            adWidthPixels = outMetrics.widthPixels;\r\n        }\r\n\r\n        int adWidth = (int) (adWidthPixels / density);\r\n\r\n        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/koltech/komendydocsgo/Demo.java b/app/src/main/java/com/koltech/komendydocsgo/Demo.java
--- a/app/src/main/java/com/koltech/komendydocsgo/Demo.java	
+++ b/app/src/main/java/com/koltech/komendydocsgo/Demo.java	
@@ -86,22 +86,17 @@
     }
 
     private AdSize getAdSize() {
-        // Determine the screen width (less decorations) to use for the ad width.
+        // Step 2 - Determine the screen width (less decorations) to use for the ad width.
         Display display = getWindowManager().getDefaultDisplay();
         DisplayMetrics outMetrics = new DisplayMetrics();
         display.getMetrics(outMetrics);
 
+        float widthPixels = outMetrics.widthPixels;
         float density = outMetrics.density;
 
-        float adWidthPixels = adContainerView.getWidth();
-
-        // If the ad hasn't been laid out, default to the full screen width.
-        if (adWidthPixels == 0) {
-            adWidthPixels = outMetrics.widthPixels;
-        }
+        int adWidth = (int) (widthPixels / density);
 
-        int adWidth = (int) (adWidthPixels / density);
-
-        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);
+        // Step 3 - Get adaptive ad size and return for setting on the ad view.
+        return AdSize.getCurrentOrientationAnchoredAdaptiveBannerAdSize(this, adWidth);
     }
 }
Index: app/src/main/java/com/koltech/komendydocsgo/Celownik.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.koltech.komendydocsgo;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.Display;\r\nimport android.widget.FrameLayout;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.ads.AdRequest;\r\nimport com.google.android.gms.ads.AdSize;\r\nimport com.google.android.gms.ads.AdView;\r\nimport com.google.android.gms.ads.MobileAds;\r\nimport com.google.android.gms.ads.initialization.InitializationStatus;\r\nimport com.google.android.gms.ads.initialization.OnInitializationCompleteListener;\r\n\r\npublic class Celownik extends AppCompatActivity {\r\n\r\n    private AdView adView;\r\n    private FrameLayout adContainerView;\r\n    private static final String AD_UNIT_ID = \"ca-app-pub-4834003578511022/4679805754\";\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.celownik);\r\n        MobileAds.initialize(this, new OnInitializationCompleteListener() {\r\n            @Override\r\n            public void onInitializationComplete(InitializationStatus initializationStatus) {\r\n            }\r\n        });\r\n\r\n        adContainerView = findViewById(R.id.ad_view_container_Celownik);\r\n\r\n        // Since we're loading the banner based on the adContainerView size, we need to wait until this\r\n        // view is laid out before we can get the width.\r\n        adContainerView.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                loadBanner();\r\n            }\r\n        });\r\n    }\r\n\r\n    /** Called when leaving the activity */\r\n    @Override\r\n    public void onPause() {\r\n        if (adView != null) {\r\n            adView.pause();\r\n        }\r\n        super.onPause();\r\n    }\r\n\r\n    /** Called when returning to the activity */\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if (adView != null) {\r\n            adView.resume();\r\n        }\r\n    }\r\n\r\n    /** Called before the activity is destroyed */\r\n    @Override\r\n    public void onDestroy() {\r\n        if (adView != null) {\r\n            adView.destroy();\r\n        }\r\n        super.onDestroy();\r\n    }\r\n\r\n    private void loadBanner() {\r\n        // Create an ad request.\r\n        adView = new AdView(this);\r\n        adView.setAdUnitId(AD_UNIT_ID);\r\n        adContainerView.removeAllViews();\r\n        adContainerView.addView(adView);\r\n\r\n        AdSize adSize = getAdSize();\r\n        adView.setAdSize(adSize);\r\n\r\n        AdRequest adRequest = new AdRequest.Builder().build();\r\n\r\n        // Start loading the ad in the background.\r\n        adView.loadAd(adRequest);\r\n    }\r\n\r\n    private AdSize getAdSize() {\r\n        // Determine the screen width (less decorations) to use for the ad width.\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n        DisplayMetrics outMetrics = new DisplayMetrics();\r\n        display.getMetrics(outMetrics);\r\n\r\n        float density = outMetrics.density;\r\n\r\n        float adWidthPixels = adContainerView.getWidth();\r\n\r\n        // If the ad hasn't been laid out, default to the full screen width.\r\n        if (adWidthPixels == 0) {\r\n            adWidthPixels = outMetrics.widthPixels;\r\n        }\r\n\r\n        int adWidth = (int) (adWidthPixels / density);\r\n\r\n        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/koltech/komendydocsgo/Celownik.java b/app/src/main/java/com/koltech/komendydocsgo/Celownik.java
--- a/app/src/main/java/com/koltech/komendydocsgo/Celownik.java	
+++ b/app/src/main/java/com/koltech/komendydocsgo/Celownik.java	
@@ -85,22 +85,17 @@
     }
 
     private AdSize getAdSize() {
-        // Determine the screen width (less decorations) to use for the ad width.
+        // Step 2 - Determine the screen width (less decorations) to use for the ad width.
         Display display = getWindowManager().getDefaultDisplay();
         DisplayMetrics outMetrics = new DisplayMetrics();
         display.getMetrics(outMetrics);
 
+        float widthPixels = outMetrics.widthPixels;
         float density = outMetrics.density;
 
-        float adWidthPixels = adContainerView.getWidth();
-
-        // If the ad hasn't been laid out, default to the full screen width.
-        if (adWidthPixels == 0) {
-            adWidthPixels = outMetrics.widthPixels;
-        }
+        int adWidth = (int) (widthPixels / density);
 
-        int adWidth = (int) (adWidthPixels / density);
-
-        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);
+        // Step 3 - Get adaptive ad size and return for setting on the ad view.
+        return AdSize.getCurrentOrientationAnchoredAdaptiveBannerAdSize(this, adWidth);
     }
 }
Index: app/src/main/java/com/koltech/komendydocsgo/FPS.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.koltech.komendydocsgo;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.Display;\r\nimport android.widget.FrameLayout;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.ads.AdRequest;\r\nimport com.google.android.gms.ads.AdSize;\r\nimport com.google.android.gms.ads.AdView;\r\nimport com.google.android.gms.ads.MobileAds;\r\nimport com.google.android.gms.ads.initialization.InitializationStatus;\r\nimport com.google.android.gms.ads.initialization.OnInitializationCompleteListener;\r\n\r\npublic class FPS extends AppCompatActivity {\r\n\r\n    private AdView adView;\r\n    private FrameLayout adContainerView;\r\n    private static final String AD_UNIT_ID = \"ca-app-pub-4834003578511022/4679805754\";\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.fps);\r\n\r\n        MobileAds.initialize(this, new OnInitializationCompleteListener() {\r\n            @Override\r\n            public void onInitializationComplete(InitializationStatus initializationStatus) {\r\n            }\r\n        });\r\n\r\n        adContainerView = findViewById(R.id.ad_view_container_FPS);\r\n\r\n        // Since we're loading the banner based on the adContainerView size, we need to wait until this\r\n        // view is laid out before we can get the width.\r\n        adContainerView.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                loadBanner();\r\n            }\r\n        });\r\n    }\r\n\r\n    /** Called when leaving the activity */\r\n    @Override\r\n    public void onPause() {\r\n        if (adView != null) {\r\n            adView.pause();\r\n        }\r\n        super.onPause();\r\n    }\r\n\r\n    /** Called when returning to the activity */\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if (adView != null) {\r\n            adView.resume();\r\n        }\r\n    }\r\n\r\n    /** Called before the activity is destroyed */\r\n    @Override\r\n    public void onDestroy() {\r\n        if (adView != null) {\r\n            adView.destroy();\r\n        }\r\n        super.onDestroy();\r\n    }\r\n\r\n    private void loadBanner() {\r\n        // Create an ad request.\r\n        adView = new AdView(this);\r\n        adView.setAdUnitId(AD_UNIT_ID);\r\n        adContainerView.removeAllViews();\r\n        adContainerView.addView(adView);\r\n\r\n        AdSize adSize = getAdSize();\r\n        adView.setAdSize(adSize);\r\n\r\n        AdRequest adRequest = new AdRequest.Builder().build();\r\n\r\n        // Start loading the ad in the background.\r\n        adView.loadAd(adRequest);\r\n    }\r\n\r\n    private AdSize getAdSize() {\r\n        // Determine the screen width (less decorations) to use for the ad width.\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n        DisplayMetrics outMetrics = new DisplayMetrics();\r\n        display.getMetrics(outMetrics);\r\n\r\n        float density = outMetrics.density;\r\n\r\n        float adWidthPixels = adContainerView.getWidth();\r\n\r\n        // If the ad hasn't been laid out, default to the full screen width.\r\n        if (adWidthPixels == 0) {\r\n            adWidthPixels = outMetrics.widthPixels;\r\n        }\r\n\r\n        int adWidth = (int) (adWidthPixels / density);\r\n\r\n        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/koltech/komendydocsgo/FPS.java b/app/src/main/java/com/koltech/komendydocsgo/FPS.java
--- a/app/src/main/java/com/koltech/komendydocsgo/FPS.java	
+++ b/app/src/main/java/com/koltech/komendydocsgo/FPS.java	
@@ -86,22 +86,17 @@
     }
 
     private AdSize getAdSize() {
-        // Determine the screen width (less decorations) to use for the ad width.
+        // Step 2 - Determine the screen width (less decorations) to use for the ad width.
         Display display = getWindowManager().getDefaultDisplay();
         DisplayMetrics outMetrics = new DisplayMetrics();
         display.getMetrics(outMetrics);
 
+        float widthPixels = outMetrics.widthPixels;
         float density = outMetrics.density;
 
-        float adWidthPixels = adContainerView.getWidth();
-
-        // If the ad hasn't been laid out, default to the full screen width.
-        if (adWidthPixels == 0) {
-            adWidthPixels = outMetrics.widthPixels;
-        }
+        int adWidth = (int) (widthPixels / density);
 
-        int adWidth = (int) (adWidthPixels / density);
-
-        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);
+        // Step 3 - Get adaptive ad size and return for setting on the ad view.
+        return AdSize.getCurrentOrientationAnchoredAdaptiveBannerAdSize(this, adWidth);
     }
 }
Index: app/src/main/java/com/koltech/komendydocsgo/Dzwienk.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.koltech.komendydocsgo;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.Display;\r\nimport android.widget.FrameLayout;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.ads.AdRequest;\r\nimport com.google.android.gms.ads.AdSize;\r\nimport com.google.android.gms.ads.AdView;\r\nimport com.google.android.gms.ads.MobileAds;\r\nimport com.google.android.gms.ads.initialization.InitializationStatus;\r\nimport com.google.android.gms.ads.initialization.OnInitializationCompleteListener;\r\n\r\npublic class Dzwienk extends AppCompatActivity {\r\n    private AdView adView;\r\n    private FrameLayout adContainerView;\r\n    private static final String AD_UNIT_ID = \"ca-app-pub-4834003578511022/4679805754\";\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.dzwienk);\r\n\r\n        MobileAds.initialize(this, new OnInitializationCompleteListener() {\r\n            @Override\r\n            public void onInitializationComplete(InitializationStatus initializationStatus) {\r\n            }\r\n        });\r\n\r\n        adContainerView = findViewById(R.id.ad_view_container_dzwienk);\r\n\r\n        // Since we're loading the banner based on the adContainerView size, we need to wait until this\r\n        // view is laid out before we can get the width.\r\n        adContainerView.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                loadBanner();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /** Called when leaving the activity */\r\n    @Override\r\n    public void onPause() {\r\n        if (adView != null) {\r\n            adView.pause();\r\n        }\r\n        super.onPause();\r\n    }\r\n\r\n    /** Called when returning to the activity */\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if (adView != null) {\r\n            adView.resume();\r\n        }\r\n    }\r\n\r\n    /** Called before the activity is destroyed */\r\n    @Override\r\n    public void onDestroy() {\r\n        if (adView != null) {\r\n            adView.destroy();\r\n        }\r\n        super.onDestroy();\r\n    }\r\n\r\n    private void loadBanner() {\r\n        // Create an ad request.\r\n        adView = new AdView(this);\r\n        adView.setAdUnitId(AD_UNIT_ID);\r\n        adContainerView.removeAllViews();\r\n        adContainerView.addView(adView);\r\n\r\n        AdSize adSize = getAdSize();\r\n        adView.setAdSize(adSize);\r\n\r\n        AdRequest adRequest = new AdRequest.Builder().build();\r\n\r\n        // Start loading the ad in the background.\r\n        adView.loadAd(adRequest);\r\n    }\r\n\r\n    private AdSize getAdSize() {\r\n        // Determine the screen width (less decorations) to use for the ad width.\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n        DisplayMetrics outMetrics = new DisplayMetrics();\r\n        display.getMetrics(outMetrics);\r\n\r\n        float density = outMetrics.density;\r\n\r\n        float adWidthPixels = adContainerView.getWidth();\r\n\r\n        // If the ad hasn't been laid out, default to the full screen width.\r\n        if (adWidthPixels == 0) {\r\n            adWidthPixels = outMetrics.widthPixels;\r\n        }\r\n\r\n        int adWidth = (int) (adWidthPixels / density);\r\n\r\n        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/koltech/komendydocsgo/Dzwienk.java b/app/src/main/java/com/koltech/komendydocsgo/Dzwienk.java
--- a/app/src/main/java/com/koltech/komendydocsgo/Dzwienk.java	
+++ b/app/src/main/java/com/koltech/komendydocsgo/Dzwienk.java	
@@ -86,22 +86,17 @@
     }
 
     private AdSize getAdSize() {
-        // Determine the screen width (less decorations) to use for the ad width.
+        // Step 2 - Determine the screen width (less decorations) to use for the ad width.
         Display display = getWindowManager().getDefaultDisplay();
         DisplayMetrics outMetrics = new DisplayMetrics();
         display.getMetrics(outMetrics);
 
+        float widthPixels = outMetrics.widthPixels;
         float density = outMetrics.density;
 
-        float adWidthPixels = adContainerView.getWidth();
-
-        // If the ad hasn't been laid out, default to the full screen width.
-        if (adWidthPixels == 0) {
-            adWidthPixels = outMetrics.widthPixels;
-        }
+        int adWidth = (int) (widthPixels / density);
 
-        int adWidth = (int) (adWidthPixels / density);
-
-        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);
+        // Step 3 - Get adaptive ad size and return for setting on the ad view.
+        return AdSize.getCurrentOrientationAnchoredAdaptiveBannerAdSize(this, adWidth);
     }
 }
Index: app/src/main/java/com/koltech/komendydocsgo/HUD.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.koltech.komendydocsgo;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.Display;\r\nimport android.widget.FrameLayout;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.ads.AdRequest;\r\nimport com.google.android.gms.ads.AdSize;\r\nimport com.google.android.gms.ads.AdView;\r\nimport com.google.android.gms.ads.MobileAds;\r\nimport com.google.android.gms.ads.initialization.InitializationStatus;\r\nimport com.google.android.gms.ads.initialization.OnInitializationCompleteListener;\r\n\r\npublic class HUD extends AppCompatActivity {\r\n\r\n    private AdView adView;\r\n    private FrameLayout adContainerView;\r\n    private static final String AD_UNIT_ID = \"ca-app-pub-4834003578511022/4679805754\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.hud);\r\n\r\n        MobileAds.initialize(this, new OnInitializationCompleteListener() {\r\n            @Override\r\n            public void onInitializationComplete(InitializationStatus initializationStatus) {\r\n            }\r\n        });\r\n\r\n        adContainerView = findViewById(R.id.ad_view_container_HUD);\r\n\r\n        // Since we're loading the banner based on the adContainerView size, we need to wait until this\r\n        // view is laid out before we can get the width.\r\n        adContainerView.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                loadBanner();\r\n            }\r\n        });\r\n    }\r\n\r\n    /** Called when leaving the activity */\r\n    @Override\r\n    public void onPause() {\r\n        if (adView != null) {\r\n            adView.pause();\r\n        }\r\n        super.onPause();\r\n    }\r\n\r\n    /** Called when returning to the activity */\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if (adView != null) {\r\n            adView.resume();\r\n        }\r\n    }\r\n\r\n    /** Called before the activity is destroyed */\r\n    @Override\r\n    public void onDestroy() {\r\n        if (adView != null) {\r\n            adView.destroy();\r\n        }\r\n        super.onDestroy();\r\n    }\r\n\r\n    private void loadBanner() {\r\n        // Create an ad request.\r\n        adView = new AdView(this);\r\n        adView.setAdUnitId(AD_UNIT_ID);\r\n        adContainerView.removeAllViews();\r\n        adContainerView.addView(adView);\r\n\r\n        AdSize adSize = getAdSize();\r\n        adView.setAdSize(adSize);\r\n\r\n        AdRequest adRequest = new AdRequest.Builder().build();\r\n\r\n        // Start loading the ad in the background.\r\n        adView.loadAd(adRequest);\r\n    }\r\n\r\n    private AdSize getAdSize() {\r\n        // Determine the screen width (less decorations) to use for the ad width.\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n        DisplayMetrics outMetrics = new DisplayMetrics();\r\n        display.getMetrics(outMetrics);\r\n\r\n        float density = outMetrics.density;\r\n\r\n        float adWidthPixels = adContainerView.getWidth();\r\n\r\n        // If the ad hasn't been laid out, default to the full screen width.\r\n        if (adWidthPixels == 0) {\r\n            adWidthPixels = outMetrics.widthPixels;\r\n        }\r\n\r\n        int adWidth = (int) (adWidthPixels / density);\r\n\r\n        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/koltech/komendydocsgo/HUD.java b/app/src/main/java/com/koltech/komendydocsgo/HUD.java
--- a/app/src/main/java/com/koltech/komendydocsgo/HUD.java	
+++ b/app/src/main/java/com/koltech/komendydocsgo/HUD.java	
@@ -87,22 +87,17 @@
     }
 
     private AdSize getAdSize() {
-        // Determine the screen width (less decorations) to use for the ad width.
+        // Step 2 - Determine the screen width (less decorations) to use for the ad width.
         Display display = getWindowManager().getDefaultDisplay();
         DisplayMetrics outMetrics = new DisplayMetrics();
         display.getMetrics(outMetrics);
 
+        float widthPixels = outMetrics.widthPixels;
         float density = outMetrics.density;
 
-        float adWidthPixels = adContainerView.getWidth();
-
-        // If the ad hasn't been laid out, default to the full screen width.
-        if (adWidthPixels == 0) {
-            adWidthPixels = outMetrics.widthPixels;
-        }
+        int adWidth = (int) (widthPixels / density);
 
-        int adWidth = (int) (adWidthPixels / density);
-
-        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);
+        // Step 3 - Get adaptive ad size and return for setting on the ad view.
+        return AdSize.getCurrentOrientationAnchoredAdaptiveBannerAdSize(this, adWidth);
     }
 }
Index: app/src/main/java/com/koltech/komendydocsgo/Granaty.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.koltech.komendydocsgo;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.Display;\r\nimport android.widget.FrameLayout;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.ads.AdRequest;\r\nimport com.google.android.gms.ads.AdSize;\r\nimport com.google.android.gms.ads.AdView;\r\nimport com.google.android.gms.ads.MobileAds;\r\nimport com.google.android.gms.ads.initialization.InitializationStatus;\r\nimport com.google.android.gms.ads.initialization.OnInitializationCompleteListener;\r\n\r\npublic class Granaty extends AppCompatActivity {\r\n\r\n\r\n    private AdView adView;\r\n    private FrameLayout adContainerView;\r\n    private static final String AD_UNIT_ID = \"ca-app-pub-4834003578511022/4679805754\";\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.granaty);\r\n\r\n        MobileAds.initialize(this, new OnInitializationCompleteListener() {\r\n            @Override\r\n            public void onInitializationComplete(InitializationStatus initializationStatus) {\r\n            }\r\n        });\r\n\r\n        adContainerView = findViewById(R.id.ad_view_container_Granaty);\r\n\r\n        // Since we're loading the banner based on the adContainerView size, we need to wait until this\r\n        // view is laid out before we can get the width.\r\n        adContainerView.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                loadBanner();\r\n            }\r\n        });\r\n    }\r\n\r\n    /** Called when leaving the activity */\r\n    @Override\r\n    public void onPause() {\r\n        if (adView != null) {\r\n            adView.pause();\r\n        }\r\n        super.onPause();\r\n    }\r\n\r\n    /** Called when returning to the activity */\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if (adView != null) {\r\n            adView.resume();\r\n        }\r\n    }\r\n\r\n    /** Called before the activity is destroyed */\r\n    @Override\r\n    public void onDestroy() {\r\n        if (adView != null) {\r\n            adView.destroy();\r\n        }\r\n        super.onDestroy();\r\n    }\r\n\r\n    private void loadBanner() {\r\n        // Create an ad request.\r\n        adView = new AdView(this);\r\n        adView.setAdUnitId(AD_UNIT_ID);\r\n        adContainerView.removeAllViews();\r\n        adContainerView.addView(adView);\r\n\r\n        AdSize adSize = getAdSize();\r\n        adView.setAdSize(adSize);\r\n\r\n        AdRequest adRequest = new AdRequest.Builder().build();\r\n\r\n        // Start loading the ad in the background.\r\n        adView.loadAd(adRequest);\r\n    }\r\n\r\n    private AdSize getAdSize() {\r\n        // Determine the screen width (less decorations) to use for the ad width.\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n        DisplayMetrics outMetrics = new DisplayMetrics();\r\n        display.getMetrics(outMetrics);\r\n\r\n        float density = outMetrics.density;\r\n\r\n        float adWidthPixels = adContainerView.getWidth();\r\n\r\n        // If the ad hasn't been laid out, default to the full screen width.\r\n        if (adWidthPixels == 0) {\r\n            adWidthPixels = outMetrics.widthPixels;\r\n        }\r\n\r\n        int adWidth = (int) (adWidthPixels / density);\r\n\r\n        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/koltech/komendydocsgo/Granaty.java b/app/src/main/java/com/koltech/komendydocsgo/Granaty.java
--- a/app/src/main/java/com/koltech/komendydocsgo/Granaty.java	
+++ b/app/src/main/java/com/koltech/komendydocsgo/Granaty.java	
@@ -89,22 +89,17 @@
     }
 
     private AdSize getAdSize() {
-        // Determine the screen width (less decorations) to use for the ad width.
+        // Step 2 - Determine the screen width (less decorations) to use for the ad width.
         Display display = getWindowManager().getDefaultDisplay();
         DisplayMetrics outMetrics = new DisplayMetrics();
         display.getMetrics(outMetrics);
 
+        float widthPixels = outMetrics.widthPixels;
         float density = outMetrics.density;
 
-        float adWidthPixels = adContainerView.getWidth();
-
-        // If the ad hasn't been laid out, default to the full screen width.
-        if (adWidthPixels == 0) {
-            adWidthPixels = outMetrics.widthPixels;
-        }
+        int adWidth = (int) (widthPixels / density);
 
-        int adWidth = (int) (adWidthPixels / density);
-
-        return AdSize.getCurrentOrientationBannerAdSizeWithWidth(this, adWidth);
+        // Step 3 - Get adaptive ad size and return for setting on the ad view.
+        return AdSize.getCurrentOrientationAnchoredAdaptiveBannerAdSize(this, adWidth);
     }
 }
